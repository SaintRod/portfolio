---
title: Resume Thunderdome
subtitle: A job application experiment
date: 2024-10-22
date-modified: ""
bibliography: references.bib
format:
  html:
    toc: true
    code-fold: true
    code-summary: Unhide
    code-copy: true
editor: source
engine: knitr
execute: 
  warning: false
  error: false
  echo: true
  freeze: true
draft: true
---

# Planning

- data
  - import
    - create quarto parameter
    - vroom import
  - prep
    - standardize titles
    - create level field; e.g., ds manager = 5
- Descriptive
  - days in market
  - num jobs applied (i.e., sample size)
    - overall
    - by resume version
    - by level
  - rejections and interview by
    - overall
    - by resume version
    - by level
  - rejection and interview rates by
    - overall
    - by resume version
    - by level
  - Apps to
    - same company
    - same job
- Stats analysis
  - which resume version best? aka resume version A vs B
    - def
      - A: traditional 2 pager
      - B: sleek 1 pager
    - levels
      - overall, all jobs
      - for same company (sample size?)
      - same jobs (sample size?)
    - metrics
        - int
          - rejections
          - interviews
        - rates
          - rejection rate
          - interview rate
  - which level does the market value me at?
    - That is, which level has the highest interview rate or lowest rejection rate
      - are the differences meaningful?
    - metrics
      - response rate (lower better)
      - interview rate (higher better)
    - is there a statistically significant difference by level?
- Resources

```{r import}
box::use(
  here[here],
  vroom[vroom],
)

# params
data_filename <- "2024.csv"
```

```{r, get_data}
#| echo: false

# define path to the data
path_data <- file.path(Sys.getenv("path_data"), data_filename)

# check point: assess if file exists
stopifnot(file.exists(path_data))

# import
df_jobs <- vroom(
  file = path_data,
  delim = ",",
  show_col_types = FALSE,
  guess_max = 1000
)
```

```{r clean_cols_headers}
# lower case
names(df_jobs) = tolower(names(df_jobs))

# keep only alphabetical characters
names(df_jobs) = gsub("[^[:alpha:]]", "_", names(df_jobs))
```

```{r drop_cols}
df_jobs = subset(df_jobs, select = -c(misc))
```

```{r standardize_text_cols}
# company
df_jobs[["company"]] = tolower(df_jobs[["company"]])

# role
df_jobs[["role"]] = tolower(df_jobs[["role"]])
df_jobs[["role"]] = gsub("\\Wa\\W*i\\W", " ai ", df_jobs[["role"]])
df_jobs[["role"]] = gsub("/", " ", df_jobs[["role"]])
df_jobs[["role"]] = gsub("[[:punct:]]", "", df_jobs[["role"]])
df_jobs[["role"]] = gsub(" {2,}", " ", df_jobs[["role"]])
df_jobs[["role"]] = gsub("sr *", "senior ", df_jobs[["role"]])
df_jobs[["role"]] = gsub("artificial intelligence", "ai", df_jobs[["role"]])
df_jobs[["role"]] = gsub("machine learning", "ml", df_jobs[["role"]])
df_jobs[["role"]] = gsub("vice president", "vp", df_jobs[["role"]])
df_jobs[["role"]] = gsub("decision science analyst senior", "senior data scientist", df_jobs[["role"]])
df_jobs[["role"]] = gsub("statistical operations analyst", "data scientist", df_jobs[["role"]])
df_jobs[["role"]] = gsub("data scientists", "data scientist", df_jobs[["role"]])
df_jobs[["role"]] = gsub("senior data scientist ml engineer", "senior data scientist", df_jobs[["role"]])
df_jobs[["role"]] = gsub("quant analytics manager vp", "quant analytics manager", df_jobs[["role"]])
df_jobs[["role"]] = trimws(df_jobs[["role"]])
```

```{r create_job_level}

```


# TL;DR

Results:

- which version had the lowest rejection rate? was the difference statistically meaningful?
- which version had the highest interview rate? was the difference statistically meaningful?


# About

Upon returning from parental leave in October 2024 I was notified that my team had been let go.
Being the nerd that I am, I began tracking my applications.
By date X, my wife reformatted my two-page resume into a sleep one-pager.
Can you guess what we did next?
If you said, AB test you're right.

Additionally, at this time the job market was tough.
So I also wanted to know what the market valued me as.

My application strategy... spray and pray.
Apply to all levels.
This allows me to assess which levels I get interviews for.

Caveats.
This is not a *real* experiment.
The results should be interpreted as *directional*.
The availability of jobs at any given time makes x a random variable.
A good modification would be to randomly assign a resume to a job but the sleek one-page version of my resume didn't exist until about two weeks into applications.

# Descriptive



# Statistical Analysis

Two analyses:

1. which resume version is *better*
2. what job level does the market value me at?

# Conclusions
